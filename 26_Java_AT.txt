26th Sep


Java ?
	HW - jdk , jre , jvm
	Program structure ? 
	comments 
	
	System.out.println

	simple java program
	data types
	operators 
29th Sep 
	
	System.out.println("Test");
	data types -----  boolean,float,char , int , double , long
				primitive types 
	
			boolean valid;
			valid=true;
			int age=20;
			long mobile_no =867867675;
			float percentage=89.56f;
			ddouble degree=23.4545345345;
			char grade='A';


	declaration and initilization ?
		int age  --- declaration
		age=22; --- initlization 
		float percen; -- declare 
		percen=87.45f; -- initlization			

	variables ? indetifier which value may be change
		age ,percen,degree --- are variables 

		age=70;

	operators ---> To operate/handle 
		1. Arithmatic Operators
			+ , - , * , / ,%
		2. Relational Operator
			> , < , >= ,<= , == ,!= --- True/False
		3. Logical Operator
		4. Bitwise operator
		5. Assignment operator	
	
		100/51 ? 1.999	

		Lab task --- check with all the relational operator
	
1/10 
		
	
		Logical operator --- and/&& or/|| not/!
					&& - all condition must true a>100 && a>b 
					|| - any of one is one condition is it give true 				a>100 || a>b
					!  - reverse 


		Lab Task -- --- Arithmatic operator user input 
				number1+number2	

				Same for relational Operator (take input from user)

3rd oct
		bit - 0/1 
		8 bits 1 byte

		5 decimal  - 0101
		20 decimal - 0001 0100
								2^5		2^4 	2^3		2^2		2^1		2^0
						128	 64	 32		16		8		4		2		1
		5  				0	 0	 0		0		0		1		0		1
		20				0	0	0		1		0		1		0		0
		32				0	0	1		0		0		0		0		0
						0	0	0		0		0		1		0		0
						0   0   0		1		0		1		0		1
32 - 0001 0000


5 & 20
		0000 0101
		0001 0100
5 | 20	0001 0101

&       0000 0100 

6th oct

Operators 
		Arithmatic - +,-,*,/,% , 
		Relational - >,<,>=,<=,==,!=
		Logical
		Bitwise
		ternary operator
		instanceof operort 

condition statements 
		Output - true/false
		when we have alternatives/options then we are using conditonal statements 
		1. if   
				if condition
				{
					stmt 
				}
		2. if else
				if condition
				{
						stmt
				}
				else
				{
						stmt
				}

		3. if elseif
				if condition
				{
					stmt
				}
				else if(condition)
				{
					stmt
				}
				else if(condition)
				{
					stmt
				}

		4. nested if
			if (condition)
			{
				if(condition)
				{
					stmt
				}
			}

Lab task : To check number is Positive or negative
			20
			22
			575675676
			-78
			-444
			-56

Lab task - number -ve , +ve ,0
			create program to check number is even/odd 
	

To accept value from user  - Scanner 


8th Oct 

		conditional statements ? --- we have to check the condition/option 
						if
						if else
						if else if
						nested if (if within if)

			1. number positive/Nagative
			2. grade marks bases grade marks = 90-100 "A" , 70-90 "B" 50-70 C 50-45 "E" else "Fail
			3. User is elibilbel to donate blood - age , weight  age>18 and weight greate 50 eligile to donate blood


			enter age 0-2 print infant , 3-17 Minor 18-60 adult , 60 seniour 70 super seniour 0

13th Oct

Task :
		enter number from user : ,number from 1-7 
		if user enters 1 print - "Monday"
		if user enters 2 print - "Tuesday"
		if user enters 3 print - "Wendesday"
Lab Task  : User enters Month Name "January" output will days "31 days"
									"February" output will days "28 or 29 days"


Nested If stmts :
			if age>18 --Adult 
			if age>18
				if condition 

			To check user is able to donate blood or not 
				1. user must adult 
				2. Wieght >45

			if(age>=18)
			{
				if(weight>=45)
				{
					sop("User is eligilbe to donate blood");
				}
				else
				{
					sop("User is underweight");
			}else
				{
					sop("User is not Adult");
			}
		

Looping : Repeatation 
		loops 
			1. while - entry control loop
					while(condition)
					{
						stmts 
					}

			2. do ... while - exit control loop
			3. for -- entry control loop

15th oct :

Print odd numbers from user entered range 
input number 1 : 10
input number2 : 35
print odd numbers from 10 to 35

17th Oct 

do while loop ? repetation 

syntax 
do
{
	stmt
}
while(condition);


1. print 1-10 with do while loop

Lab task : Perform all programs which was develop with 'while' recreate with 'do ...while'


27th Oct 

- do while loop 
- syntext  -  
do 
{
	stmts
}while(condition);

-for loop 
  - repeatation 
 - for(intilization ; condition ; increment/decrement)
	{
		stmt
	}
	print 1-10 

i=1;
while(i<=10)
{
	sop(i);
	i++;
}

for(i=1;i<=10;i++)
{
	sop(i);
}


Differece : While , do while , for 
			- entry control- for ,while
			- exit control - do while
			no of iteration is fixed - for 
			no idea about iteration then use do..while , while 


- break , continue control statements 

		To break loop based on condition , using break stmt 
		break when i is 5 
		loop will be exit/break when perticular condition 

continue - skip current iteration and continue with next iteration 
		continue when i is 5



1. print multilication table with for loop 
2. print 1-100 and break when value is divisable by 57



29th oct 

for - repeation - entry control - 
      for(int i=1;i<=10;i++)
		{
			sop(i);
		}

break - loop break based on condition
continue - skip current iteration 

Array -> 

int roll_no1,rool_no2,roll_no3,......roll_no70....;

-- array is special data type which store multiple values under same/single name .
-- array always use with [] breakets 
-- array always access thru index 
-- index always stars from 0

storing 70 roll_nos of int type

//array declaration 
int roll_no[70];
float precentage[70];

int roll_no1,roll_no2,roll_no3;
roll_no1=1001;
roll_no2=1002;
roll_no3=1003;

//array initlization 
roll_no[0]=1001;
roll_no[1]=1002;
roll_no[2]=1003;
.....
roll_no[69]=1070;

31st Oct 

	How we can accept data from user in array .
Scanner
Array

 Please enter no of Elements 
input : 5

Please enter no 1 = 12
Please enter no 2 = 125
Please enter no 3 = 1
Please enter no 4 = 2
Please enter no 5 = 342

output : 
12
125
1
2
342

Lab Task : accept the float values from user 

- sum of all array elements 

static array 

int[] arr={23,45,12}
sum= 80

Lab task : Accept array from user and sum of it.

Lab Task : Print even odd element 

3
12
23
11
output
12 -even
23 - odd
11 - odd



















